import javax.net.ssl.*;
import java.io.IOException;
import org.apache.http.conn.ssl.*;
import java.security.KeyStoreException;
import org.apache.http.util.EntityUtils;
import java.security.KeyManagementException;
import org.apache.http.ssl.SSLContextBuilder;
import java.security.NoSuchAlgorithmException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.client.methods.CloseableHttpResponse;


def uri = new URI("${REPOSITORY_URL}")
def temp = uri.getPath().split("/").takeRight(2)
def project = temp[0]
def repos = temp[1].replaceAll(".git","")
def addr = getAddr(uri,true)

try  {
    def endpoint = addr +'/api/v1/repos/' + project + '/' + repos + '/contents'
    def httpclient = createAcceptCrt()
    def httpget = new HttpGet(endpoint)
    def response = httpclient.execute(httpget)
    def entity = response.getEntity()
    def result = EntityUtils.toString(entity)
    def json =  jsonParse(result)
    def dirs = []
    dirs.add("/:selected")
    json.each{ val ->
        if (val.type == 'dir'){
            dirs.add(val.name.toString())
        }
    }
    return dirs
} catch (NoSuchAlgorithmException | KeyStoreException | KeyManagementException | IOException e) {
    throw new RuntimeException(e)
}

def createAcceptCrt() throws KeyManagementException, NoSuchAlgorithmException, KeyStoreException {
    SSLContext sslContext = SSLContextBuilder.create().loadTrustMaterial(new TrustSelfSignedStrategy()).build();
    HostnameVerifier allowAllHosts = new NoopHostnameVerifier();
    SSLConnectionSocketFactory connectionFactory = new SSLConnectionSocketFactory(sslContext, allowAllHosts);
    return HttpClients.custom().setSSLSocketFactory(connectionFactory).build();
}

def jsonParse(def json) {
    new groovy.json.JsonSlurperClassic().parseText(json)
}
def getAddr(uri,schema){
    def matches = (uri =~ "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)(:([^\\/]*))?")
    def addr = ""
    if (schema){
        addr = matches[0].getAt(2)+"://" + matches[0].getAt(3)
    }else{
        addr = matches[0].getAt(3)
    }
    if (matches[0].getAt(4).toString() != "null" ){
        addr = addr + matches[0].getAt(4)
    }
    return addr
}